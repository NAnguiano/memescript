MemeScript {
  Program          =  Stmnt+
  Stmnt            =  ConstDec 
                   |  VarDec
                   |  FunDec
                   |  If
                   |  While
                   |  For
                   |  TryCatch
                   |  TryCatchFinally
                   |  Switch
                   |  Call
                   |  Assignment

  Block            =  (newline indent Stmnt)*
  Body             =  Block | Stmnt
  
  ConstDec         =  "overlyattachedgirlfriend.jpg" id ";"
  VarDec           =  "ermahgerd" id ";"
  ObjDec           =  "wow" id ":" newline indent Constructor newline indent ObjMethods*
  
  Constructor      =  "such" "(" Params ")" ":" Body
  ObjMethods       =  "so" id "(" Params ")" ":" Body
  
  FunDec           =  "you:" id "(" Params ")" ":" newline indent "me, an intellectual:" Body
  If               =  "I don't always" "(" Exp ")" ":" newline indent "but when I do" ":" Body (ElseIf)* (Else)?
  ElseIf           =  "but sometimes I" "(" Exp ")" ":" Body
  Else             =  "otherwise I do" ":" Body
  While            =  "yo, I'mma let you finish" "(" Exp ")" ":" newline indent "but" ":" Body
  For              =  "one does not simply" ":" Body "without" "(" VarDec ";" Exp ";" Exp ")"
  TryCatch         =  "Chuck Norris doesn't" ":" Block "he" ":" Block
  TryCatchFinally  =  "Chuck Norris doesn't" ":" Block "or" ":" Block "he" ":" Block
  Switch           =  "this is bill" "(" id ")" ":" (newline indent SwitchBody)* Default

  SwitchBody       =  SwitchCase Block newline indent "be like bill;"
  SwitchCase       =  "bill has a" Literal ":" | "bill is a" Literal ":"
  Default          =  "bill is smart" ":" Block newline indent "be like bill;"

  Exp              =  NonemptyListOf<Exp1, "||">
  Exp1             =  NonemptyListOf<Exp2, "&&">
  Exp2             =  Exp3 (relop Exp3)?
  Exp3             =  NonemptyListOf<Exp4, addop>
  Exp4             =  NonemptyListOf<Exp5, mulop>
  Exp5             =  prefixop? Exp6
  Exp6             =  Literal
                   |  Var
                   |  "(" Exp ")"

  Literal          =  "null"
                   |  "true"
                   |  "false"
                   |  strlit
                   |  numlit

  Assignment       =  id "=" Exp ";"
  Call             =  id "(" Args ")"

  Args             =  ListOf<Exp, ",">
  Var              =  Var "[" Exp "]"
                   |  Var "." id
                   |  Call
                   |  id

  Params           =  ((Param | OptionalParam) ("," (Param | OptionalParam))* ("," SplatParam)?)?
  
  Param            = id
  OptionalParam    = id "=" Exp
  SplatParam       = id "..."

  mulop            =  "*" | "/" | "%"
  prefixop         =  "!" | "-"
  relop            =  "<=" | "<" | "==" | "===" | "!=" | ">=" | ">"
  addop            =  "+" | "-"

  char             =  escape
                   |  ~"\n" ~"\"" ~"'" any

  strlit           =  "\"" char* "\"" | "'" char* "'"
  intlit           =  digit+
  floatlit         =  digit+ "." digit+
  numlit           =  intlit | floatlit

  escape           =  "\\n" | "\\\"" | "\'"
  space           :=  "\x20"
  newline          =  "\n"
  indent           =  space space space space
  keyword          =  ("you" | "but" | "without" | "ermahgerd" | "he" | "wow" | "such" | "very" 
                      | "so" | "much" | "dicks" | "false" | "true" | "null" | "undefined") ~idrest
  id               =  ~keyword letter idrest*
  idrest           =  "_" | alnum
}
